{"version":3,"sources":["components/general/Copyright.js","components/general/Message.js","components/general/Loader.js","constants/userConstants.js","actions/userActions.js","views/SignUpView.js","views/SignInView.js","components/general/Logo.js","layouts/mainLayout/MainLayout.js","layouts/dashboardLayout/DashboardNavbar.js","layouts/dashboardLayout/NavItem.js","context/main-context.js","layouts/dashboardLayout/DashboardSidebar.js","context/outlet-context.js","layouts/dashboardLayout/DashboardLayout.js","components/order/OrderListToolbar.js","constants/orderConstants.js","actions/orderActions.js","components/order/OrderCard.js","components/general/Paginate.js","views/OrderListView.js","components/order/NewOrderToolbar.js","components/order/UploadFiles.js","data/workTypes.js","views/orders/OrderView.js","views/orders/OrderEditView.js","components/messanger/Message.js","components/messanger/NewMessage.js","components/messanger/Chat.js","components/messanger/Conversation.js","components/messanger/Conversations.js","views/MessangerView.js","routes.js","theme.js","components/GlobalStyles.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","Message","severity","children","Stack","sx","width","spacing","Alert","Loader","Box","LinearProgress","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","logout","dispatch","localStorage","removeItem","type","document","location","SignUpView","useLocation","useState","userType","setUserType","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","agreementChecked","setAgreementCheck","navigate","useNavigate","useDispatch","userRegister","useSelector","state","loading","error","userInfo","redirect","search","split","useEffect","Container","component","maxWidth","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","e","preventDefault","isWriter","a","config","headers","axios","post","data","payload","setItem","JSON","stringify","response","register","mt","Grid","container","item","xs","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","size","value","onChange","target","disabled","FormControl","RadioGroup","row","FormControlLabel","control","Radio","Checkbox","RouterLink","to","checked","Button","mb","justifyContent","SignInView","userLogin","login","margin","Logo","ml","alt","src","style","maxHeight","fontSize","fontFamily","ButtonAppBar","AppBar","elevation","Toolbar","flexGrow","onClick","DashboardNavbar","onMobileNavOpen","rest","notifications","IconButton","lg","Tooltip","title","Badge","badgeContent","length","height","NavItem","Icon","icon","active","matchPath","path","end","pathname","ListItem","disableGutters","py","fontWeight","letterSpacing","textTransform","mr","MainContext","createContext","MessagesIcon","marginRight","OrdersIcon","ProfileIcon","SettingsIcon","customerItems","authorItems","DashboardSidebar","onMobileClose","openMobile","items","user","avatar","jobTitle","useContext","setSelectedMenu","selectedMenu","content","p","cursor","Divider","List","map","Drawer","anchor","onClose","open","PaperProps","top","defaultProps","OutletContext","DashboardLayoutRoot","experimentalStyled","backgroundColor","theme","palette","background","default","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","onlineUsers","setOnlineUsers","isMobileNavOpen","setMobileNavOpen","init","setInit","socket","useRef","outlet","useOutlet","console","log","current","io","disconnect","emit","_id","on","users","Provider","OrderListToolbar","keyword","setKeyword","startIcon","menu","trim","Card","CardContent","InputProps","startAdornment","InputAdornment","position","placeholder","pl","pr","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_UPDATE_REQUEST","ORDER_UPDATE_SUCCESS","ORDER_UPDATE_FAIL","ORDER_UPDATE_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_CREATE_BID_REQUEST","ORDER_CREATE_BID_SUCCESS","ORDER_CREATE_BID_FAIL","ORDER_CREATE_BID_RESET","createOrder","order","getState","Authorization","token","listOrderDetails","get","updateOrder","put","createOrderBid","orderId","bid","OrderCard","mode","underline","WebkitBoxOrient","WebkitLineClamp","workDescription","alignSelf","bids","minWidth","Math","max","price","min","freelancer","Chip","published","moment","dueToDate","format","Paginate","pages","page","setPage","Pagination","count","event","OrderListView","useParams","pageNumber","orderList","orders","listAuctionOrders","listMyOrders","minHeight","pt","NewOrderToolbar","useStyles","makeStyles","dropzone","padding","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","UploadFiles","classes","useDropzone","acceptedFiles","getRootProps","getInputProps","setSelectedFiles","files","selectedFiles","file","dense","disablePadding","divider","filter","handleDeleteButton","url","encodeURIComponent","join","method","responseType","then","window","URL","createObjectURL","Blob","link","createElement","setAttribute","body","appendChild","click","className","workTypes","BootstrapDialog","styled","Dialog","BootstrapDialogTitle","other","DialogTitle","OrderView","workType","setWorkType","setTheme","setWorkDescription","setDueToDate","budget","setBudget","bidValue","setBidValue","canBid","setCanBid","orderDetails","setOpen","bidMessage","setBidMessage","handleClose","confirmBid","comment","conversationId","senderId","receiverId","customer","req","sender","text","Object","keys","indexOf","md","Paper","InputLabelProps","shrink","SelectProps","native","multiline","minRows","InputLabel","htmlFor","OutlinedInput","DialogContent","dividers","DialogActions","AccessibleIcon","OrderEditView","orderGuid","setOrderGuid","setPublished","setUploading","orderCreate","success","createdOrder","orderUpdate","successUpdate","uploadFiles","handleFileUpload","submitOrderHandler","uploadedFiles","formData","FormData","key","append","select","LocalizationProvider","dateAdapter","AdapterDateFns","locale","ruLocale","DatePicker","mask","newValue","components","OpenPickerIcon","renderInput","params","TimeAgo","addDefaultLocale","ru","timeAgo","own","mx","createdAt","NewMessage","currentChat","messages","setMessages","scrollToBottom","messageText","setMessageText","handleSubmit","members","find","member","borderTop","Chat","arrivalMessage","messagesEndRef","includes","prev","fetchMessages","scrollIntoView","square","overflowY","idx","ref","Conversation","conversation","handleListItemClick","selectedIndex","currentUser","conversations","online","setOnline","oponentId","onUsr","userId","ListItemButton","borderLeft","selected","ListItemAvatar","overlap","ListItemText","primary","oponentName","Conversations","setCurrentChat","setConversations","setSelectedIndex","selectedConv","setSelectedConv","index","fetchConversations","conv","borderBottom","toLowerCase","MessangerView","setArrivalMessage","now","routes","element","createTheme","paper","colors","common","white","main","secondary","blueGrey","MuiOutlinedInput","styleOverrides","root","MuiButton","createStyles","boxSizing","html","textDecoration","GlobalStyles","App","routing","useRoutes","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderBidCreate","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.cc5baffe.chunk.js","sourcesContent":["import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant='body2'\r\n      color='text.secondary'\r\n      align='center'\r\n      {...props}\r\n    >\r\n      {'Copyright © '}\r\n      <Link color='inherit' href='https://google.com/'>\r\n        Придумать название\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Copyright\r\n","import React from 'react'\r\nimport Alert from '@material-ui/core/Alert'\r\nimport Stack from '@material-ui/core/Stack'\r\n\r\nexport default function Message({ severity, children }) {\r\n  return (\r\n    <Stack sx={{ width: '100%' }} spacing={2}>\r\n      <Alert severity={severity}>{children}</Alert>\r\n    </Stack>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nexport function Loader() {\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <LinearProgress />\r\n    </Box>\r\n  )\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  document.location.href = '/signin'\n}\n\nexport const register =\n  (firstName, lastName, email, password, isWriter) => async (dispatch) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST,\n      })\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n\n      const { data } = await axios.post(\n        '/api/users',\n        { firstName, lastName, email, password, isWriter },\n        config\n      )\n\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data,\n      })\n\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      })\n\n      localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Copyright from '../components/general/Copyright'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Message from '../components/general/Message'\r\nimport { Loader } from '../components/general/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { register } from '../actions/userActions'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nconst SignUpView = () => {\r\n  const location = useLocation()\r\n\r\n  const [userType, setUserType] = useState('customer')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [agreementChecked, setAgreementCheck] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect)\r\n    }\r\n  }, [navigate, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Пароли не совпадают!')\r\n    } else {\r\n      dispatch(\r\n        register(\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          password,\r\n          userType === 'author' ? true : false\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Регистрация\r\n        </Typography>\r\n        <Box component='form' onSubmit={submitHandler} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete='fname'\r\n                name='firstName'\r\n                required\r\n                fullWidth\r\n                id='firstName'\r\n                label='Имя'\r\n                autoFocus\r\n                size='small'\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                disabled={loading}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id='lastName'\r\n                label='Фамилия'\r\n                name='lastName'\r\n                autoComplete='lname'\r\n                size='small'\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                disabled={loading}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email'\r\n                name='email'\r\n                autoComplete='email'\r\n                size='small'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                disabled={loading}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Пароль'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                size='small'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                disabled={loading}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Подтверждение пароля'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                size='small'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                disabled={loading}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl component='fieldset'>\r\n                <RadioGroup\r\n                  row\r\n                  value={userType}\r\n                  onChange={(e) => setUserType(e.target.value)}\r\n                  disabled={loading}\r\n                >\r\n                  <FormControlLabel\r\n                    value='customer'\r\n                    control={<Radio />}\r\n                    label='Я заказчик'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='author'\r\n                    control={<Radio />}\r\n                    label='Я автор'\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value='allowExtraEmails' color='primary' />}\r\n                label={\r\n                  <>\r\n                    {'Я принимаю условия '}\r\n                    <Link component={RouterLink} to='/' variant='body1'>\r\n                      пользовательского соглашения.\r\n                    </Link>\r\n                  </>\r\n                }\r\n                disabled={loading}\r\n                checked={agreementChecked}\r\n                onChange={(e) => setAgreementCheck(e.target.checked)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            sx={{ mt: 3, mb: 2 }}\r\n            disabled={loading || !agreementChecked}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n\r\n          <Grid container justifyContent='flex-end'>\r\n            <Grid item>\r\n              <Link href='#' variant='body2'>\r\n                Уже есть аккаунт? Войти\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          {error && <Message severity='error'>{error}</Message>}\r\n          {message && <Message severity='error'>{message}</Message>}\r\n          {loading && <Loader />}\r\n        </Box>\r\n      </Box>\r\n      <Copyright sx={{ mt: 5 }} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignUpView\r\n","import React, { useState, useEffect } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Copyright from '../components/general/Copyright'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { login } from '../actions/userActions'\r\nimport Message from '../components/general/Message'\r\nimport { Loader } from '../components/general/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst SignInView = () => {\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(redirect)\r\n    }\r\n  }, [navigate, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Войти\r\n        </Typography>\r\n        <Box component='form' onSubmit={submitHandler} sx={{ mt: 1 }}>\r\n          <TextField\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n            size='small'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Пароль'\r\n            type='password'\r\n            id='password'\r\n            autoComplete='current-password'\r\n            size='small'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value='remember' color='primary' />}\r\n            label='Запомнить меня'\r\n          /> */}\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            sx={{ mt: 3, mb: 2 }}\r\n          >\r\n            Войти\r\n          </Button>\r\n          {error && <Message severity='error'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href='#' variant='body2'>\r\n                Забыли пароль?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href='#' variant='body2'>\r\n                {'Еще нет учетной записи? Регистрация'}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      <Copyright sx={{ mt: 8, mb: 4 }} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignInView\r\n","import { Box, Typography } from '@material-ui/core'\n\nconst Logo = (props) => (\n  <Box\n    sx={{\n      ml: 1,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    }}\n  >\n    <img\n      alt='Logo'\n      src='/static/logo.svg'\n      {...props}\n      style={{ maxHeight: 57 }}\n    />\n    <Typography\n      variant='h6'\n      color='whitesmoke'\n      sx={{ fontSize: 28, fontFamily: 'Dancing Script, cursive' }}\n    >\n      Academist\n    </Typography>\n  </Box>\n)\n\nexport default Logo\n","import AppBar from '@material-ui/core/AppBar'\r\nimport { Box, Container } from '@material-ui/core'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport { Outlet } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Logo from '../../components/general/Logo'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nexport default function ButtonAppBar() {\r\n  const navigate = useNavigate()\r\n\r\n  const handleSignIn = () => {\r\n    navigate('signin')\r\n  }\r\n\r\n  const handleSignUp = () => {\r\n    navigate('signup')\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <AppBar elevation={0}>\r\n        <Toolbar>\r\n          <Box>\r\n            <RouterLink to='/'>\r\n              <Logo />\r\n            </RouterLink>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Button color='inherit' onClick={handleSignUp}>\r\n            Регистрация\r\n          </Button>\r\n          <Button color='inherit' onClick={handleSignIn}>\r\n            Вход\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Container>\r\n        <Outlet />\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport {\n  AppBar,\n  Badge,\n  Box,\n  IconButton,\n  Toolbar,\n  Tooltip,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Logo from '../../components/general/Logo'\nimport { LogOut as LogOutIcon, Bell as BellIcon } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout } from '../../actions/userActions'\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const dispatch = useDispatch()\n\n  const [notifications] = useState([])\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <AppBar elevation={0} {...rest}>\n      <Toolbar>\n        <IconButton\n          color='inherit'\n          onClick={onMobileNavOpen}\n          sx={{ display: { lg: 'none', xs: 'block' } }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box>\n          <RouterLink to='/'>\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Box sx={{ flexGrow: 1 }} />\n        <Tooltip title='Уведомления'>\n          <IconButton color='inherit'>\n            <Badge\n              badgeContent={notifications.length}\n              color='primary'\n              variant='dot'\n            >\n              <img src='/icons/notification.png' height='25px' width='25px' />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title='Выйти'>\n          <IconButton color='inherit' onClick={logoutHandler}>\n            <img src='/icons/logout.png' height='25px' width='25px' />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default DashboardNavbar\n","import { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Button, ListItem } from '@material-ui/core'\n\nconst NavItem = ({ href, icon: Icon, title, ...rest }) => {\n  const location = useLocation()\n\n  const active = href\n    ? !!matchPath(\n        {\n          path: href,\n          end: false,\n        },\n        location.pathname\n      )\n    : false\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0,\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main',\n          }),\n          '& svg': {\n            mr: 1,\n          },\n        }}\n        to={href}\n      >\n        {Icon && <Icon size='20' />}\n        <span>{title}</span>\n      </Button>\n    </ListItem>\n  )\n}\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string,\n}\n\nexport default NavItem\n","import { createContext } from 'react'\r\n\r\nconst MainContext = createContext()\r\n\r\nexport { MainContext }\r\n","import { useContext, useEffect } from 'react'\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\nimport { useNavigate } from 'react-router'\nimport PropTypes from 'prop-types'\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  List,\n  Typography,\n} from '@material-ui/core'\nimport NavItem from './NavItem'\nimport { useSelector } from 'react-redux'\nimport { MainContext } from '../../context/main-context'\n\nconst MessagesIcon = () => {\n  return (\n    <img\n      src='/icons/messages.png'\n      height='25px'\n      width='25px'\n      style={{ marginRight: '10px' }}\n    />\n  )\n}\n\nconst AuctionIcon = () => {\n  return (\n    <img\n      src='/icons/auction.png'\n      height='25px'\n      width='25px'\n      style={{ marginRight: '10px' }}\n    />\n  )\n}\n\nconst OrdersIcon = () => {\n  return (\n    <img\n      src='/icons/orders.png'\n      height='25px'\n      width='25px'\n      style={{ marginRight: '10px' }}\n    />\n  )\n}\n\nconst ProfileIcon = () => {\n  return (\n    <img\n      src='/icons/profile.png'\n      height='25px'\n      width='25px'\n      style={{ marginRight: '10px' }}\n    />\n  )\n}\n\nconst SettingsIcon = () => {\n  return (\n    <img\n      src='/icons/settings.png'\n      height='25px'\n      width='25px'\n      style={{ marginRight: '10px' }}\n    />\n  )\n}\n\nconst customerItems = [\n  {\n    href: '/app/orders',\n    icon: OrdersIcon,\n    title: 'Мои заказы',\n  },\n  {\n    href: '/app/messages',\n    icon: MessagesIcon,\n    title: 'Мои переписки',\n  },\n  {\n    href: '/app/account',\n    icon: ProfileIcon,\n    title: 'Профиль',\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Настройки',\n  },\n]\n\nconst authorItems = [\n  {\n    href: '/app/auction',\n    icon: AuctionIcon,\n    title: 'Аукцион',\n  },\n  {\n    href: '/app/orders',\n    icon: OrdersIcon,\n    title: 'Мои заказы',\n  },\n  {\n    href: '/app/messages',\n    icon: MessagesIcon,\n    title: 'Мои переписки',\n  },\n  {\n    href: '/app/account',\n    icon: ProfileIcon,\n    title: 'Профиль',\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Настройки',\n  },\n]\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const items = userInfo?.isWriter ? authorItems : customerItems\n  const user = {\n    avatar: '/static/images/avatars/avatar_6.png',\n    jobTitle: userInfo?.isWriter ? 'Автор' : 'Заказчик',\n    name: userInfo?.firstName + ' ' + userInfo?.lastName,\n  }\n\n  const { selectedMenu, setSelectedMenu } = useContext(MainContext)\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose()\n    }\n  }, [location.pathname])\n\n  useEffect(() => {\n    setSelectedMenu(items[0])\n    navigate(items[0].href)\n  }, [])\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 2,\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          sx={{\n            cursor: 'pointer',\n            width: 64,\n            height: 64,\n          }}\n          to='/app/account'\n        />\n        <Typography color='textPrimary' variant='h6' align='center'>\n          {user.name}\n        </Typography>\n        <Typography color='textSecondary' variant='body2'>\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <div\n              onClick={() => {\n                setSelectedMenu(item)\n              }}\n            >\n              <NavItem\n                href={item.href}\n                key={item.title}\n                title={item.title}\n                icon={item.icon}\n              />\n            </div>\n          ))}\n        </List>\n      </Box>\n    </Box>\n  )\n\n  return (\n    <>\n      <Drawer\n        sx={{ display: { lg: 'none', xs: 'block' } }}\n        anchor='left'\n        onClose={onMobileClose}\n        open={openMobile}\n        variant='temporary'\n        PaperProps={{\n          sx: {\n            width: 256,\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n      <Drawer\n        sx={{ display: { xs: 'none', lg: 'block' } }}\n        anchor='left'\n        open\n        variant='persistent'\n        PaperProps={{\n          sx: {\n            width: 256,\n            top: 64,\n            height: 'calc(100% - 64px)',\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n    </>\n  )\n}\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n}\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false,\n}\n\nexport default DashboardSidebar\n","import { createContext } from 'react'\r\n\r\nconst OutletContext = createContext()\r\n\r\nexport { OutletContext }\r\n","import { useEffect, useRef, useState } from 'react'\nimport { useOutlet } from 'react-router-dom'\nimport { experimentalStyled } from '@material-ui/core'\nimport DashboardNavbar from './DashboardNavbar'\nimport DashboardSidebar from './DashboardSidebar'\nimport { io } from 'socket.io-client'\nimport { OutletContext } from '../../context/outlet-context'\nimport { MainContext } from '../../context/main-context'\nimport { useSelector } from 'react-redux'\n\nconst DashboardLayoutRoot = experimentalStyled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}))\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256,\n  },\n}))\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n})\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n})\n\nconst DashboardLayout = () => {\n  const [onlineUsers, setOnlineUsers] = useState([])\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\n  const [selectedMenu, setSelectedMenu] = useState(null)\n\n  const [init, setInit] = useState(false)\n  const socket = useRef()\n  const outlet = useOutlet()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    console.log('hello')\n    socket.current = io()\n\n    return () => {\n      socket.current.disconnect()\n    }\n  }, [])\n\n  useEffect(() => {\n    socket.current?.emit('addUser', userInfo._id)\n    socket.current?.on('getUsers', (users) => {\n      setOnlineUsers(users)\n    })\n    setInit(true)\n  }, [userInfo])\n\n  return (\n    <>\n      {init && (\n        <MainContext.Provider value={{ selectedMenu, setSelectedMenu }}>\n          <DashboardLayoutRoot>\n            <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n            <DashboardSidebar\n              onMobileClose={() => setMobileNavOpen(false)}\n              openMobile={isMobileNavOpen}\n            />\n            <DashboardLayoutWrapper>\n              <DashboardLayoutContainer>\n                <DashboardLayoutContent>\n                  {/* <Outlet /> */}\n                  <OutletContext.Provider value={{ socket, onlineUsers }}>\n                    {outlet}\n                  </OutletContext.Provider>\n                </DashboardLayoutContent>\n              </DashboardLayoutContainer>\n            </DashboardLayoutWrapper>\n          </DashboardLayoutRoot>\n        </MainContext.Provider>\n      )}\n    </>\n  )\n}\n\nexport default DashboardLayout\n","import { useContext, useState } from 'react'\nimport {\n  Box,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  InputAdornment,\n} from '@material-ui/core'\n\nimport { useNavigate } from 'react-router'\nimport { MainContext } from '../../context/main-context'\n\nconst OrderListToolbar = (props) => {\n  const { selectedMenu } = useContext(MainContext)\n\n  const [keyword, setKeyword] = useState('')\n  const navigate = useNavigate()\n\n  const handleNewOrder = () => {\n    navigate('/app/orders/create')\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    const menu = selectedMenu.title === 'Мои заказы' ? 'orders' : 'auction'\n\n    if (keyword.trim()) {\n      navigate(`/app/${menu}/search/${keyword}`)\n    } else {\n      navigate('/')\n    }\n  }\n\n  return (\n    <>\n      <Box {...props}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Button\n            color='primary'\n            variant='outlined'\n            startIcon={<img src='/icons/plus.png' height='25px' width='25px' />}\n            onClick={handleNewOrder}\n          >\n            Новый заказ\n          </Button>\n        </Box>\n        <form onSubmit={submitHandler}>\n          <Box sx={{ mt: 3 }}>\n            <Card variant='outlined'>\n              <CardContent>\n                <Box\n                  sx={{\n                    maxWidth: 500,\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                  }}\n                >\n                  <TextField\n                    fullWidth\n                    size='small'\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position='start'>\n                          <img\n                            src='/icons/search.png'\n                            height='25px'\n                            width='25px'\n                          />\n                        </InputAdornment>\n                      ),\n                    }}\n                    placeholder='Поиск заказа'\n                    variant='outlined'\n                    value={keyword}\n                    onChange={(e) => setKeyword(e.target.value)}\n                  />\n                  <Button\n                    sx={{ ml: 2, pl: 5, pr: 5 }}\n                    variant='outlined'\n                    type='submit'\n                  >\n                    Найти\n                  </Button>\n                </Box>\n              </CardContent>\n            </Card>\n          </Box>\n        </form>\n      </Box>\n    </>\n  )\n}\n\nexport default OrderListToolbar\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_UPDATE_REQUEST = 'ORDER_UPDATE_REQUEST'\r\nexport const ORDER_UPDATE_SUCCESS = 'ORDER_UPDATE_SUCCESS'\r\nexport const ORDER_UPDATE_FAIL = 'ORDER_UPDATE_FAIL'\r\nexport const ORDER_UPDATE_RESET = 'ORDER_UPDATE_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\nexport const ORDER_CREATE_BID_REQUEST = 'ORDER_CREATE_BID_REQUEST'\r\nexport const ORDER_CREATE_BID_SUCCESS = 'ORDER_CREATE_BID_SUCCESS'\r\nexport const ORDER_CREATE_BID_FAIL = 'ORDER_CREATE_BID_FAIL'\r\nexport const ORDER_CREATE_BID_RESET = 'ORDER_CREATE_BID_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_UPDATE_REQUEST,\r\n  ORDER_UPDATE_SUCCESS,\r\n  ORDER_UPDATE_FAIL,\r\n  ORDER_CREATE_BID_REQUEST,\r\n  ORDER_CREATE_BID_SUCCESS,\r\n  ORDER_CREATE_BID_FAIL,\r\n  // ORDER_LIST_MY_REQUEST,\r\n  // ORDER_LIST_MY_SUCCESS,\r\n  // ORDER_LIST_MY_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/orders/create', order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders =\r\n  (keyword = '', pageNumber = '') =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.get(\r\n        `/api/orders/myorders?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n        config\r\n      )\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      // if (message === 'Not authorized, token failed') {\r\n      //   dispatch(logout())\r\n      // }\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const listAuctionOrders =\r\n  (keyword = '', pageNumber = '') =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `/api/orders/auctionorders?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n        config\r\n      )\r\n\r\n      dispatch({\r\n        type: ORDER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      // if (message === 'Not authorized, token failed') {\r\n      //   dispatch(logout())\r\n      // }\r\n      dispatch({\r\n        type: ORDER_LIST_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const listOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/update/${order._id}`,\r\n      order,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: ORDER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createOrderBid = (orderId, bid) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_BID_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/orders/${orderId}/bids`, bid, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_BID_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: ORDER_CREATE_BID_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n  Tooltip,\n  Link,\n} from '@material-ui/core'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport moment from 'moment'\nimport { Edit } from 'react-feather'\nimport { useNavigate } from 'react-router'\n\nconst OrderCard = ({ order, mode, ...rest }) => {\n  const navigate = useNavigate()\n\n  const handleCardEdit = (orderId) => {\n    navigate(`/app/orders/edit/${orderId}`)\n  }\n  return (\n    <Card\n      variant='outlined'\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n      }}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n          }}\n        >\n          <Box>\n            <Link\n              href={`/app/orders/view/${order._id}`}\n              underline='none'\n              align='left'\n              color='primary'\n              variant='h5'\n            >\n              {order.theme}\n            </Link>\n            <Typography\n              align='left'\n              color='textPrimary'\n              variant='body1'\n              sx={{\n                display: '-webkit-box',\n                overflow: 'hidden',\n                WebkitBoxOrient: 'vertical',\n                WebkitLineClamp: 5,\n              }}\n            >\n              {order.workDescription}\n            </Typography>\n          </Box>\n\n          <Box\n            display='flex'\n            flexDirection='column'\n            alignItems='flex-end'\n            alignSelf='center'\n          >\n            {order.bids.length > 0 && (\n              <Typography\n                align='right'\n                color='textPrimary'\n                variant='subtitle1'\n                minWidth={150}\n                fontWeight={700}\n              >\n                {`₽ ${Math.max(\n                  ...order.bids.map((bid) => bid.price)\n                )} - ${Math.min(...order.bids.map((bid) => bid.price))}`}\n              </Typography>\n            )}\n\n            {mode !== 'auction' && (\n              <>\n                <Typography\n                  align='left'\n                  color='textPrimary'\n                  variant='subtitle1'\n                >\n                  Исполнитель: {!order.freelancer && 'Не назначен'}\n                </Typography>\n                <Chip\n                  label={order.published ? 'Опубликовано' : 'Черновик'}\n                  sx={{ minWidth: 150 }}\n                  color={order.published ? 'primary' : 'default'}\n                  variant='outlined'\n                />\n              </>\n            )}\n          </Box>\n        </Box>\n      </CardContent>\n\n      <Box />\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <Grid container spacing={2} sx={{ justifyContent: 'space-between' }}>\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n            }}\n          >\n            {mode !== 'auction' && !order.published && (\n              <Tooltip title='Редактировать'>\n                <IconButton\n                  sx={{ height: 35, width: 35 }}\n                  onClick={() => handleCardEdit(order._id)}\n                >\n                  <img src='/icons/edit.png' height='25px' width='25px' />\n                </IconButton>\n              </Tooltip>\n            )}\n\n            <img src='/icons/clock.png' height='25px' width='25px' />\n\n            <Typography\n              color='textSecondary'\n              display='inline'\n              sx={{ pl: 1 }}\n              variant='body2'\n            >\n              Срок сдачи до {moment(order.dueToDate).format('DD.MM.YYYY')}\n            </Typography>\n          </Grid>\n\n          <Grid\n            item\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n            }}\n          >\n            <Typography\n              color='textSecondary'\n              display='inline'\n              sx={{ pl: 1 }}\n              variant='body2'\n            >\n              {order.bids.length} ставок сделано\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  )\n}\n\nexport default OrderCard\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport { useNavigate } from 'react-router'\r\nimport { MainContext } from '../../context/main-context'\r\n\r\nconst Paginate = ({ pages, keyword = '' }) => {\r\n  const { selectedMenu } = useContext(MainContext)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [page, setPage] = useState(1)\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value)\r\n    const menu = selectedMenu.title === 'Мои заказы' ? 'orders' : 'auction'\r\n    navigate(\r\n      keyword\r\n        ? `/app/${menu}/search/${keyword}/page/${value}`\r\n        : `/app/${menu}/page/${value}`\r\n    )\r\n  }\r\n  return (\r\n    pages > 1 && (\r\n      <>\r\n        <Pagination\r\n          color='primary'\r\n          count={pages}\r\n          size='small'\r\n          page={page}\r\n          onChange={handleChange}\r\n        />\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Container, Grid, Pagination } from '@material-ui/core'\r\nimport OrderListToolbar from '../components/order/OrderListToolbar'\r\nimport { listMyOrders, listAuctionOrders } from '../actions/orderActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Loader } from '../components/general/Loader'\r\nimport Message from '../components/general/Message'\r\nimport OrderCard from '../components/order/OrderCard'\r\nimport { useParams } from 'react-router'\r\nimport Paginate from '../components/general/Paginate'\r\nimport { ORDER_LIST_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderListView = ({ mode = 'myOrders' }) => {\r\n  const dispatch = useDispatch()\r\n  const { keyword } = useParams()\r\n  const { pageNumber } = useParams() || 1\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders, pages } = orderList\r\n\r\n  useEffect(() => {\r\n    if (mode === 'auction') {\r\n      dispatch(listAuctionOrders(keyword, pageNumber))\r\n    } else {\r\n      dispatch(listMyOrders(keyword, pageNumber))\r\n    }\r\n    // return () => {\r\n    //   dispatch({ type: ORDER_LIST_RESET })\r\n    // }\r\n  }, [dispatch, keyword, pageNumber, mode])\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth='lg'>\r\n          <OrderListToolbar />\r\n          <Box sx={{ pt: 3 }}>\r\n            <Grid container spacing={3}>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message severity='error'>{error}</Message>\r\n              ) : (\r\n                <>\r\n                  {orders.map((order) => (\r\n                    <Grid item key={order.id} xs={12}>\r\n                      <OrderCard order={order} mode={mode} />\r\n                    </Grid>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              pt: 3,\r\n            }}\r\n          >\r\n            <Paginate pages={pages} keyword={keyword} />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListView\r\n","import { Box, Button, Typography, IconButton, Tooltip } from '@material-ui/core'\r\nimport { useNavigate } from 'react-router'\r\nconst NewOrderToolbar = (props) => {\r\n  const navigate = useNavigate()\r\n\r\n  const handleNavBack = () => {\r\n    navigate(-1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box {...props}>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'flex-start',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {/* {props.mode !== 'view' && ( */}\r\n            <>\r\n              <Typography variant='h5' sx={{ ml: 1 }}>\r\n                {props.mode === 'edit'\r\n                  ? 'Редактирование заказа'\r\n                  : props.mode === 'view'\r\n                  ? 'Просмотр заказа'\r\n                  : 'Создание нового заказа'}\r\n              </Typography>\r\n\r\n              {/* <Tooltip title='Сохранить'>\r\n                  <IconButton type='submit'>\r\n                    <img src='/icons/save.png' height='25px' width='25px' />\r\n                  </IconButton>\r\n                </Tooltip> */}\r\n            </>\r\n            {/* )} */}\r\n          </Box>\r\n\r\n          <Button\r\n            color='primary'\r\n            variant='outlined'\r\n            startIcon={<img src='/icons/back.png' height='25px' width='25px' />}\r\n            onClick={handleNavBack}\r\n          >\r\n            Назад\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewOrderToolbar\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { List, ListItem, IconButton, Tooltip } from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router'\r\nimport path from 'path'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropzone: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '15px',\r\n    borderWidth: '1px',\r\n    borderRadius: '20px',\r\n    borderColor: '#263238',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#fafafa',\r\n    color: 'grey',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out',\r\n    cursor: 'pointer',\r\n  },\r\n}))\r\n\r\nconst UploadFiles = (props) => {\r\n  const classes = useStyles()\r\n  const { id } = useParams()\r\n\r\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone()\r\n\r\n  const handleDeleteButton = (file) => {\r\n    props.setSelectedFiles(props.selectedFiles.filter((e) => e !== file))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (acceptedFiles.length > 0) {\r\n      props.setSelectedFiles(acceptedFiles)\r\n    }\r\n  }, [acceptedFiles])\r\n\r\n  const files = props.selectedFiles.map((file) => (\r\n    <>\r\n      {props.mode !== 'view' ? (\r\n        <ListItem dense disablePadding divider>\r\n          <Tooltip title='Удалить'>\r\n            <IconButton\r\n              color='secondary'\r\n              onClick={() => handleDeleteButton(file)}\r\n            >\r\n              <img src='/icons/delete.png' height='25px' width='25px' />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {file.name}\r\n        </ListItem>\r\n      ) : (\r\n        <ListItem dense disablePadding divider>\r\n          <Tooltip title='Скачать'>\r\n            <IconButton\r\n              color='secondary'\r\n              onClick={() => {\r\n                console.log(file)\r\n                const url = `/api/orders/files/download?filepath=${encodeURIComponent(\r\n                  path.join(id, file.name)\r\n                )}`\r\n\r\n                axios({\r\n                  url: url,\r\n                  method: 'GET',\r\n                  responseType: 'blob',\r\n                }).then((response) => {\r\n                  const url = window.URL.createObjectURL(\r\n                    new Blob([response.data])\r\n                  )\r\n                  const link = document.createElement('a')\r\n                  link.href = url\r\n                  link.setAttribute('download', file.name)\r\n                  document.body.appendChild(link)\r\n                  link.click()\r\n                })\r\n              }}\r\n            >\r\n              <img src='/icons/download.png' height='25px' width='25px' />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {file.name}\r\n        </ListItem>\r\n      )}\r\n    </>\r\n  ))\r\n\r\n  return (\r\n    <section>\r\n      {props.mode !== 'view' && (\r\n        <div {...getRootProps({ className: classes.dropzone })}>\r\n          <input {...getInputProps()} />\r\n          <p>\r\n            Для импорта файлов, перетащите их сюда или нажмите в эту область\r\n          </p>\r\n          <img alt='' src='/icons/upload_cloud.png' style={{ height: 50 }} />\r\n        </div>\r\n      )}\r\n      {props.selectedFiles.length > 0 && (\r\n        <aside style={{ marginTop: props.mode !== 'view' ? 15 : 0 }}>\r\n          <h4>Приложенные файлы:</h4>\r\n          <List sx={{ width: 'auto', bgcolor: 'background.paper' }}>\r\n            {files}\r\n          </List>\r\n        </aside>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UploadFiles\r\n","const workTypes = [\r\n  'Решение задач',\r\n  'Курсовая работа',\r\n  'Презентации',\r\n  'Отчёт по практике',\r\n  'Дипломная работа',\r\n  'Статья',\r\n  'Чертёж',\r\n  'Контрольная работа',\r\n  'Ответы на вопросы',\r\n  'Помощь on-line',\r\n  'Лабораторная работа',\r\n  'Повышение уникальности текста',\r\n  'Доклад',\r\n  'Выпускная квалификационная работа',\r\n  'Магистерская диссертация',\r\n  'Перевод',\r\n  'Набор текста',\r\n  'Маркетинговое исследование',\r\n  'Монография',\r\n  'Программирование',\r\n  'Творческая работа',\r\n  'Рецензия',\r\n  'Копирайтинг',\r\n  'Вычитка и рецензирование работ',\r\n  'Бизнес-план',\r\n  'Подбор темы работы',\r\n  'Другое',\r\n]\r\n\r\nexport default workTypes\r\n","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n  DialogTitle,\r\n  IconButton,\r\n  Dialog,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport NewOrderToolbar from '../../components/order/NewOrderToolbar'\r\nimport UploadFiles from '../../components/order/UploadFiles'\r\nimport DatePicker from '@material-ui/lab/DatePicker'\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider'\r\nimport ruLocale from 'date-fns/locale/ru'\r\nimport { createOrderBid, listOrderDetails } from '../../actions/orderActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport workTypes from '../../data/workTypes'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Loader } from '../../components/general/Loader'\r\nimport Message from '../../components/general/Message'\r\nimport { styled } from '@mui/material/styles'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { OutletContext } from '../../context/outlet-context'\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2),\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n    </DialogTitle>\r\n  )\r\n}\r\n\r\nconst OrderView = ({ mode }) => {\r\n  const { socket } = useContext(OutletContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const { id } = useParams()\r\n\r\n  const [workType, setWorkType] = useState(workTypes[0])\r\n  const [theme, setTheme] = useState()\r\n  const [workDescription, setWorkDescription] = useState()\r\n  const [dueToDate, setDueToDate] = useState(new Date())\r\n  const [budget, setBudget] = useState()\r\n  const [bidValue, setBidValue] = useState()\r\n  const [canBid, setCanBid] = useState(false)\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState([])\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { loading, error, order } = orderDetails\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [bidMessage, setBidMessage] = useState('')\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const confirmBid = async (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      createOrderBid(id, {\r\n        bidValue,\r\n        comment: bidMessage,\r\n      })\r\n    )\r\n\r\n    let conversationId = null\r\n    // get conversation\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const req = await axios.post(\r\n        '/api/conversations/create',\r\n        { senderId: userInfo._id, receiverId: order.customer },\r\n        config\r\n      )\r\n      conversationId = req.data._id\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n\r\n    // send a message\r\n    const message = {\r\n      sender: userInfo._id,\r\n      conversationId,\r\n      text: bidMessage,\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/messages/create', message, config)\r\n\r\n      //Отправить сообщение\r\n      socket.current.emit('sendMessage', {\r\n        senderId: userInfo._id,\r\n        receiverId: order.customer,\r\n        text: bidMessage,\r\n      })\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!order || Object.keys(order).length === 0) {\r\n      dispatch(listOrderDetails(id))\r\n    } else {\r\n      setWorkType(order.workType)\r\n      setTheme(order.theme)\r\n      setWorkDescription(order.workDescription)\r\n      setDueToDate(order.dueToDate)\r\n      setBudget(order.budget)\r\n      setSelectedFiles(order.files)\r\n      setCanBid(\r\n        order.bids.map((bid) => bid.user).indexOf(userInfo._id) === -1\r\n          ? true\r\n          : false\r\n      )\r\n    }\r\n  }, [order])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message severity='error'>{error}</Message>\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            backgroundColor: 'background.default',\r\n            minHeight: '100%',\r\n            py: 3,\r\n          }}\r\n        >\r\n          <Container maxWidth='lg'>\r\n            <NewOrderToolbar mode='view' />\r\n            <Grid container spacing={2}>\r\n              <Grid item lg={9} md={7} xs={12}>\r\n                <Box sx={{ pt: 3 }}>\r\n                  <Paper variant='outlined' elevation={0}>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        label='Тема задания'\r\n                        fullWidth={true}\r\n                        size='small'\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        value={theme}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        label='Тип работы'\r\n                        variant='outlined'\r\n                        SelectProps={{\r\n                          native: true,\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        value={workType}\r\n                      >\r\n                        {workTypes.map((e) => (\r\n                          <option>{e}</option>\r\n                        ))}\r\n                      </TextField>\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        label='Описание задания'\r\n                        multiline\r\n                        fullWidth={true}\r\n                        minRows={5}\r\n                        size='small'\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        value={workDescription}\r\n                      />\r\n                    </Box>\r\n                  </Paper>\r\n                  {selectedFiles.length > 0 && (\r\n                    <Paper variant='outlined' elevation={0} sx={{ mt: 2 }}>\r\n                      <Box sx={{ m: 2 }}>\r\n                        <UploadFiles\r\n                          selectedFiles={selectedFiles}\r\n                          setSelectedFiles={setSelectedFiles}\r\n                          mode='view'\r\n                        />\r\n                      </Box>\r\n                    </Paper>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n              <Grid item lg={3} md={5} xs={12}>\r\n                <Box sx={{ pt: 3 }}>\r\n                  <Paper variant='outlined' elevation={0}>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        label='Срок сдачи'\r\n                        fullWidth={true}\r\n                        sx={{ width: '90%', maxWidth: 250 }}\r\n                        size='small'\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        value={moment(dueToDate).format('DD.MM.yyyy')}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <FormControl sx={{ width: '90%', maxWidth: 250 }}>\r\n                        <InputLabel htmlFor='outlined-adornment-amount'>\r\n                          Бюджет\r\n                        </InputLabel>\r\n                        <OutlinedInput\r\n                          size='small'\r\n                          type='number'\r\n                          value={budget}\r\n                          startAdornment={\r\n                            <InputAdornment position='start'>₽</InputAdornment>\r\n                          }\r\n                          label='Бюджет'\r\n                        />\r\n                      </FormControl>\r\n                    </Box>\r\n                  </Paper>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      mt: 2,\r\n                    }}\r\n                  >\r\n                    {order?.customer !== userInfo._id && (\r\n                      <Button\r\n                        disabled={!canBid}\r\n                        onClick={handleClickOpen}\r\n                        color='primary'\r\n                        variant='outlined'\r\n                        startIcon={\r\n                          <img\r\n                            src='/icons/bet.png'\r\n                            height='25px'\r\n                            width='25px'\r\n                          />\r\n                        }\r\n                        sx={{ mb: 1 }}\r\n                      >\r\n                        Сделать ставку\r\n                      </Button>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n      )}\r\n\r\n      <BootstrapDialog onClose={handleClose} open={open} maxWidth='md'>\r\n        <BootstrapDialogTitle\r\n          id='customized-dialog-title'\r\n          onClose={handleClose}\r\n        >\r\n          Ваша ставка\r\n        </BootstrapDialogTitle>\r\n        <form onSubmit={confirmBid}>\r\n          <DialogContent dividers>\r\n            <Box sx={{ mb: 2 }}>\r\n              <FormControl sx={{ width: '90%', maxWidth: 250 }} required>\r\n                <InputLabel htmlFor='outlined-adornment-amount'>\r\n                  Ставка\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  size='small'\r\n                  type='number'\r\n                  value={bidValue}\r\n                  startAdornment={\r\n                    <InputAdornment position='start'>₽</InputAdornment>\r\n                  }\r\n                  label='Ставка'\r\n                  onChange={(e) => setBidValue(e.target.value)}\r\n                />\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <TextField\r\n              sx={{ width: 600 }}\r\n              label='Сообщение заказчику'\r\n              fullWidth={true}\r\n              size='small'\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              multiline\r\n              minRows={3}\r\n              value={bidMessage}\r\n              onChange={(e) => setBidMessage(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button\r\n              type='submit'\r\n              color='primary'\r\n              variant='outlined'\r\n              startIcon={\r\n                <img src='/icons/bet.png' height='25px' width='25px' />\r\n              }\r\n              sx={{ mb: 1 }}\r\n            >\r\n              Подтвердить ставку\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </BootstrapDialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderView\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n} from '@material-ui/core'\r\nimport NewOrderToolbar from '../../components/order/NewOrderToolbar'\r\nimport UploadFiles from '../../components/order/UploadFiles'\r\nimport DatePicker from '@material-ui/lab/DatePicker'\r\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider'\r\nimport ruLocale from 'date-fns/locale/ru'\r\nimport {\r\n  createOrder,\r\n  updateOrder,\r\n  listOrderDetails,\r\n} from '../../actions/orderActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport workTypes from '../../data/workTypes'\r\nimport { useNavigate, useParams } from 'react-router'\r\nimport { Loader } from '../../components/general/Loader'\r\nimport Message from '../../components/general/Message'\r\nimport {\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_UPDATE_RESET,\r\n} from '../../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nconst AccessibleIcon = () => {\r\n  return <img src='/icons/calendar.png' height='25px' width='25px' />\r\n}\r\n\r\nconst OrderEditView = ({ mode }) => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const [orderGuid, setOrderGuid] = useState(null)\r\n\r\n  const { id } = useParams()\r\n\r\n  const [workType, setWorkType] = useState(workTypes[0])\r\n  const [theme, setTheme] = useState()\r\n  const [workDescription, setWorkDescription] = useState()\r\n  const [dueToDate, setDueToDate] = useState(new Date())\r\n  const [budget, setBudget] = useState()\r\n  const [published, setPublished] = useState(false)\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState([])\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { loading, success, error, order: createdOrder } = orderCreate\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { loading: loadingDetails, error: errorDetails, order } = orderDetails\r\n\r\n  const orderUpdate = useSelector((state) => state.orderUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = orderUpdate\r\n\r\n  useEffect(() => {\r\n    const uploadFiles = async () => {\r\n      await handleFileUpload(selectedFiles)\r\n    }\r\n\r\n    if (success) {\r\n      setOrderGuid(createdOrder._id)\r\n      if (orderGuid) {\r\n        if (selectedFiles.length > 0) {\r\n          uploadFiles()\r\n        }\r\n        navigate('/')\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n      }\r\n    }\r\n    return () => dispatch({ type: ORDER_DETAILS_RESET })\r\n  }, [navigate, success, orderGuid])\r\n\r\n  useEffect(() => {\r\n    if (mode && mode === 'edit') {\r\n      if (successUpdate) {\r\n        dispatch({ type: ORDER_UPDATE_RESET })\r\n        navigate('/')\r\n      } else {\r\n        setOrderGuid(id)\r\n\r\n        if (!order || Object.keys(order).length === 0) {\r\n          dispatch(listOrderDetails(id))\r\n        } else {\r\n          setWorkType(order.workType)\r\n          setTheme(order.theme)\r\n          setWorkDescription(order.workDescription)\r\n          setDueToDate(order.dueToDate)\r\n          setBudget(order.budget)\r\n          setSelectedFiles(order.files)\r\n        }\r\n      }\r\n    }\r\n  }, [successUpdate, order, dispatch])\r\n\r\n  const submitOrderHandler = async (e) => {\r\n    e.preventDefault()\r\n    if (mode === 'edit') {\r\n      await handleFileUpload(selectedFiles)\r\n    }\r\n\r\n    const data = {\r\n      _id: id,\r\n      theme,\r\n      workType,\r\n      workDescription,\r\n      dueToDate,\r\n      budget,\r\n      published,\r\n      uploadedFiles: selectedFiles.map((e) => {\r\n        return {\r\n          name: e.name,\r\n        }\r\n      }),\r\n    }\r\n\r\n    if (mode === 'edit') {\r\n      dispatch(updateOrder(data))\r\n    } else {\r\n      dispatch(createOrder(data))\r\n    }\r\n  }\r\n\r\n  const handleFileUpload = async (files) => {\r\n    const formData = new FormData()\r\n    for (const key of Object.keys(files)) {\r\n      formData.append('fileCollection', files[key])\r\n    }\r\n\r\n    setUploading(true)\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        `/api/upload/${orderGuid}`,\r\n        formData,\r\n        config\r\n      )\r\n\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          minHeight: '100%',\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth='lg'>\r\n          <form onSubmit={submitOrderHandler}>\r\n            <NewOrderToolbar mode={mode} />\r\n            <Grid container spacing={2}>\r\n              <Grid item lg={9} md={7} xs={12}>\r\n                <Box sx={{ pt: 3 }}>\r\n                  <Paper variant='outlined' elevation={0}>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        required\r\n                        label='Тема задания'\r\n                        fullWidth={true}\r\n                        size='small'\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        value={theme}\r\n                        onChange={(e) => setTheme(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        select\r\n                        label='Тип работы'\r\n                        variant='outlined'\r\n                        SelectProps={{\r\n                          native: true,\r\n                        }}\r\n                        size='small'\r\n                        fullWidth={true}\r\n                        value={workType}\r\n                        onChange={(e) => setWorkType(e.target.value)}\r\n                      >\r\n                        {workTypes.map((e) => (\r\n                          <option>{e}</option>\r\n                        ))}\r\n                      </TextField>\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <TextField\r\n                        required\r\n                        label='Описание задания'\r\n                        multiline\r\n                        fullWidth={true}\r\n                        minRows={5}\r\n                        size='small'\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        value={workDescription}\r\n                        onChange={(e) => setWorkDescription(e.target.value)}\r\n                      />\r\n                    </Box>\r\n                  </Paper>\r\n                  <Paper variant='outlined' elevation={0} sx={{ mt: 2 }}>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <UploadFiles\r\n                        selectedFiles={selectedFiles}\r\n                        setSelectedFiles={setSelectedFiles}\r\n                      />\r\n                    </Box>\r\n                  </Paper>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item lg={3} md={5} xs={12}>\r\n                <Box sx={{ pt: 3 }}>\r\n                  <Paper variant='outlined' elevation={0}>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <LocalizationProvider\r\n                        dateAdapter={AdapterDateFns}\r\n                        locale={ruLocale}\r\n                      >\r\n                        <DatePicker\r\n                          label='Срок сдачи'\r\n                          mask='__.__.____'\r\n                          value={dueToDate}\r\n                          onChange={(newValue) => setDueToDate(newValue)}\r\n                          components={{\r\n                            OpenPickerIcon: AccessibleIcon,\r\n                          }}\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              sx={{ width: '90%', maxWidth: 250 }}\r\n                              size='small'\r\n                              {...params}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </Box>\r\n                    <Box sx={{ m: 2 }}>\r\n                      <FormControl sx={{ width: '90%', maxWidth: 250 }}>\r\n                        <InputLabel htmlFor='outlined-adornment-amount'>\r\n                          Бюджет\r\n                        </InputLabel>\r\n                        <OutlinedInput\r\n                          size='small'\r\n                          type='number'\r\n                          value={budget}\r\n                          onChange={(e) => setBudget(e.target.value)}\r\n                          startAdornment={\r\n                            <InputAdornment position='start'>₽</InputAdornment>\r\n                          }\r\n                          label='Бюджет'\r\n                        />\r\n                      </FormControl>\r\n                    </Box>\r\n                  </Paper>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      // justifyContent: 'center',\r\n                      mt: 2,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      onClick={() => setPublished(true)}\r\n                      type='submit'\r\n                      color='primary'\r\n                      variant='outlined'\r\n                      startIcon={\r\n                        <img\r\n                          src='/icons/publish.png'\r\n                          height='25px'\r\n                          width='25px'\r\n                        />\r\n                      }\r\n                      sx={{ mb: 1 }}\r\n                    >\r\n                      Опубликовать заказ\r\n                    </Button>\r\n\r\n                    <Button\r\n                      //onClick={() => setPublished(false)}\r\n                      type='submit'\r\n                      color='primary'\r\n                      variant='outlined'\r\n                      startIcon={\r\n                        <img src='/icons/save.png' height='25px' width='25px' />\r\n                      }\r\n                    >\r\n                      Сохранить заказ\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          {loading && <Loader />}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderEditView\r\n","import { Avatar, Paper, Typography } from '@material-ui/core'\r\nimport { Box } from '@material-ui/system'\r\nimport React from 'react'\r\nimport TimeAgo from 'javascript-time-ago'\r\n\r\n// Russian.\r\nimport ru from 'javascript-time-ago/locale/ru.json'\r\n\r\nTimeAgo.addDefaultLocale(ru)\r\n\r\nconst timeAgo = new TimeAgo('ru-RU')\r\n\r\nconst Message = ({ message, own = false }) => {\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      alignItems='flex-start'\r\n      sx={{ mt: 2, mr: 2 }}\r\n      justifyContent={own ? 'flex-end' : 'flex-start'}\r\n    >\r\n      <Avatar\r\n        alt={`Avatar n°1`}\r\n        src={`/static/images/avatar/1.jpg`}\r\n        sx={{\r\n          ml: 2,\r\n          mr: 1,\r\n          width: '32px',\r\n          height: '32px',\r\n          display: own && 'none',\r\n        }}\r\n      />\r\n      <Box display='flex' flexDirection='column'>\r\n        <Paper\r\n          sx={{\r\n            maxWidth: 560,\r\n            width: 'auto',\r\n            p: 1,\r\n            borderRadius: '16px',\r\n            bgcolor: own && 'primary.main',\r\n            color: own && 'rgb(255, 255, 255)',\r\n          }}\r\n          elevation={0}\r\n          variant='outlined'\r\n        >\r\n          {message.text}\r\n        </Paper>\r\n        <Typography\r\n          sx={{ color: 'rgb(107, 119, 140)', mx: 2 }}\r\n          variant='body2'\r\n          align={own ? 'right' : 'left'}\r\n        >\r\n          {timeAgo.format(new Date(message.createdAt))}\r\n        </Typography>\r\n      </Box>\r\n      <Avatar\r\n        alt={`Avatar n°1`}\r\n        src={`/static/images/avatar/1.jpg`}\r\n        sx={{\r\n          ml: 1,\r\n          width: '32px',\r\n          height: '32px',\r\n          display: !own && 'none',\r\n        }}\r\n      />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import { Avatar, IconButton, TextField } from '@material-ui/core'\r\nimport { Box } from '@material-ui/system'\r\nimport { Tooltip } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nconst NewMessage = ({\r\n  currentChat,\r\n  messages,\r\n  setMessages,\r\n  scrollToBottom,\r\n  socket,\r\n}) => {\r\n  const [messageText, setMessageText] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const handleSubmit = async () => {\r\n    const message = {\r\n      sender: userInfo._id,\r\n      conversationId: currentChat._id,\r\n      text: messageText,\r\n    }\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== userInfo._id\r\n    )\r\n\r\n    socket.current.emit('sendMessage', {\r\n      senderId: userInfo._id,\r\n      receiverId,\r\n      text: messageText,\r\n    })\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/messages/create', message, config)\r\n      setMessages([...messages, data])\r\n      setMessageText('')\r\n      scrollToBottom()\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Avatar\r\n        alt={`Avatar n°1`}\r\n        src={`/static/images/avatar/1.jpg`}\r\n        sx={{\r\n          mr: 1,\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        multiline\r\n        fullWidth={true}\r\n        size='small'\r\n        placeholder='Сообщение'\r\n        sx={{\r\n          '& .MuiOutlinedInput-root': {\r\n            borderRadius: '16px',\r\n          },\r\n        }}\r\n        value={messageText}\r\n        onChange={(e) => setMessageText(e.target.value)}\r\n        // onKeyDown={(e) => {\r\n        //   if (e.keyCode === 13 && !e.ctrlKey) {\r\n        //     e.preventDefault()\r\n        //     if (messageText.trim() !== '') handleSubmit()\r\n        //   }\r\n        // }}\r\n      />\r\n      <Tooltip title='Отправить'>\r\n        <IconButton disabled={messageText.trim() === ''} onClick={handleSubmit}>\r\n          <img src='/icons/send.png' height='25px' width='25px' />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default NewMessage\r\n","import { Paper } from '@material-ui/core'\r\nimport { Box } from '@material-ui/system'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport Message from './Message'\r\nimport NewMessage from './NewMessage'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Chat = ({\r\n  currentChat,\r\n  socket,\r\n  arrivalMessage,\r\n  messages,\r\n  setMessages,\r\n}) => {\r\n  const messagesEndRef = useRef(null)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage])\r\n  }, [arrivalMessage, currentChat])\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        }\r\n        const { data } = await axios.get(\r\n          `/api/messages/${currentChat._id}`,\r\n          config\r\n        )\r\n\r\n        setMessages(data)\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n    if (currentChat) fetchMessages()\r\n  }, [currentChat])\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current\r\n      .scrollIntoView\r\n      // { behavior: 'smooth' }\r\n      ()\r\n  }\r\n\r\n  useEffect(scrollToBottom, [messages])\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      square\r\n      sx={{\r\n        height: 'calc(100vh - 64px)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n      }}\r\n      variant='outlined'\r\n    >\r\n      <Box sx={{ height: '100vh', overflowY: 'scroll' }}>\r\n        {messages.map((message, idx) => (\r\n          <Message\r\n            key={idx}\r\n            message={message}\r\n            own={message.sender === userInfo._id}\r\n          />\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </Box>\r\n\r\n      <NewMessage\r\n        socket={socket}\r\n        currentChat={currentChat}\r\n        messages={messages}\r\n        setMessages={setMessages}\r\n        scrollToBottom={scrollToBottom}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import {\r\n  Avatar,\r\n  Badge,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemText,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst Conversation = ({\r\n  conversation,\r\n  idx,\r\n  handleListItemClick,\r\n  selectedIndex,\r\n  currentUser,\r\n  onlineUsers,\r\n  conversations,\r\n}) => {\r\n  const [online, setOnline] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const oponentId = conversation.members.find((m) => m !== currentUser)\r\n    if (onlineUsers.map((onUsr) => onUsr.userId).indexOf(oponentId) !== -1) {\r\n      setOnline(true)\r\n    } else {\r\n      setOnline(false)\r\n    }\r\n  }, [onlineUsers, conversations])\r\n\r\n  return (\r\n    <ListItem disablePadding>\r\n      <ListItemButton\r\n        sx={\r\n          selectedIndex === idx && {\r\n            borderLeft: '3px solid #2574A9',\r\n          }\r\n        }\r\n        selected={selectedIndex === idx}\r\n        onClick={() => {\r\n          handleListItemClick(idx)\r\n        }}\r\n      >\r\n        <ListItemAvatar\r\n          sx={\r\n            selectedIndex === idx && {\r\n              ml: '-3px',\r\n            }\r\n          }\r\n        >\r\n          <Badge\r\n            color={online ? 'success' : 'default'}\r\n            overlap='circular'\r\n            variant='dot'\r\n          >\r\n            <Avatar\r\n            // alt={`Avatar n°${conversation + 1}`}\r\n            // src={`/static/images/avatar/${conversation + 1}.jpg`}\r\n            />\r\n          </Badge>\r\n        </ListItemAvatar>\r\n\r\n        <ListItemText primary={conversation.oponentName} />\r\n      </ListItemButton>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default Conversation\r\n","import { InputAdornment, List, Paper, TextField } from '@material-ui/core'\r\nimport { Box } from '@material-ui/system'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Conversation from './Conversation'\r\n\r\nconst Conversations = ({ setCurrentChat, onlineUsers, messages }) => {\r\n  const [conversations, setConversations] = useState([])\r\n  const [selectedIndex, setSelectedIndex] = useState(0)\r\n  const [selectedConv, setSelectedConv] = useState(null)\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const handleListItemClick = (index) => {\r\n    setSelectedIndex(index)\r\n    setSelectedConv(conversations[index]._id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        }\r\n        const { data } = await axios.get(\r\n          `/api/conversations/${userInfo._id}`,\r\n          config\r\n        )\r\n\r\n        setConversations(data)\r\n        if (conversations.length === 0) {\r\n          setCurrentChat(data[0])\r\n        }\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n    fetchConversations()\r\n  }, [userInfo, messages])\r\n\r\n  useEffect(() => {\r\n    const index = conversations.map((conv) => conv._id).indexOf(selectedConv)\r\n    setSelectedIndex(index !== -1 ? index : 0)\r\n  }, [conversations])\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      square\r\n      sx={{\r\n        height: 'calc(100vh - 64px)',\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n      }}\r\n    >\r\n      <Box sx={{ p: 2 }}>\r\n        <TextField\r\n          fullWidth\r\n          size='small'\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>\r\n                <img src='/icons/search.png' height='25px' width='25px' />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          placeholder='Пользователи'\r\n          variant='outlined'\r\n          value={keyword}\r\n          onChange={(e) => {\r\n            setKeyword(e.target.value)\r\n          }}\r\n        />\r\n        <List sx={{ width: '100%' }} component='nav'>\r\n          {conversations\r\n            .filter((conversation) =>\r\n              conversation.oponentName\r\n                .toLowerCase()\r\n                .includes(keyword.toLowerCase())\r\n            )\r\n            .map((conversation, idx) => (\r\n              <div key={idx} onClick={() => setCurrentChat(conversation)}>\r\n                <Conversation\r\n                  onlineUsers={onlineUsers}\r\n                  conversation={conversation}\r\n                  idx={idx}\r\n                  handleListItemClick={handleListItemClick}\r\n                  selectedIndex={selectedIndex}\r\n                  currentUser={userInfo._id}\r\n                  conversations={conversations}\r\n                />\r\n              </div>\r\n            ))}\r\n        </List>\r\n      </Box>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Conversations\r\n","import { Grid } from '@material-ui/core'\r\nimport { Box } from '@material-ui/system'\r\nimport React, { useEffect, useRef, useState, useContext } from 'react'\r\nimport Chat from '../components/messanger/Chat'\r\nimport Conversations from '../components/messanger/Conversations'\r\n//import { io } from 'socket.io-client'\r\n//import { useSelector } from 'react-redux'\r\nimport { OutletContext } from '../context/outlet-context'\r\n\r\nconst MessangerView = () => {\r\n  const { socket, onlineUsers } = useContext(OutletContext)\r\n\r\n  const [messages, setMessages] = useState([])\r\n  const [currentChat, setCurrentChat] = useState(null)\r\n  const [arrivalMessage, setArrivalMessage] = useState(null)\r\n  //const [onlineUsers, setOnlineUsers] = useState([])\r\n  //const socket = useRef()\r\n\r\n  // const userLogin = useSelector((state) => state.userLogin)\r\n  // const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    //socket.current = io('ws://localhost:8900')\r\n    socket.current?.on('getMessage', (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      })\r\n    })\r\n    // return () => {\r\n    //   socket.current.disconnect()\r\n    // }\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   socket.current?.emit('addUser', userInfo._id)\r\n  //   socket.current?.on('getUsers', (users) => {\r\n  //     setOnlineUsers(users)\r\n  //   })\r\n  // }, [userInfo])\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Conversations\r\n            setCurrentChat={setCurrentChat}\r\n            onlineUsers={onlineUsers}\r\n            messages={messages}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <Chat\r\n            currentChat={currentChat}\r\n            socket={socket}\r\n            arrivalMessage={arrivalMessage}\r\n            messages={messages}\r\n            setMessages={setMessages}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MessangerView\r\n","import React from 'react'\r\nimport SignUpView from './views/SignUpView'\r\nimport SignInView from './views/SignInView'\r\nimport MainLayout from './layouts/mainLayout/MainLayout'\r\nimport DashboardLayout from './layouts/dashboardLayout/DashboardLayout'\r\nimport OrderListView from './views/OrderListView'\r\nimport OrderView from './views/orders/OrderView'\r\nimport { Navigate } from 'react-router'\r\nimport OrderEditView from './views/orders/OrderEditView'\r\nimport MessangerView from './views/MessangerView'\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: '/', element: <Navigate to='orders' /> },\r\n\r\n      { path: 'orders', element: <OrderListView /> },\r\n      { path: 'orders/page/:pageNumber', element: <OrderListView /> },\r\n      { path: 'orders/search/:keyword', element: <OrderListView /> },\r\n      {\r\n        path: 'orders/search/:keyword/page/:pageNumber',\r\n        element: <OrderListView />,\r\n      },\r\n      { path: 'orders/create', element: <OrderEditView /> },\r\n      { path: 'orders/edit/:id', element: <OrderEditView mode='edit' /> },\r\n      { path: 'orders/view/:id', element: <OrderView mode='edit' /> },\r\n\r\n      { path: 'auction', element: <OrderListView mode='auction' /> },\r\n      {\r\n        path: 'auction/page/:pageNumber',\r\n        element: <OrderListView mode='auction' />,\r\n      },\r\n      {\r\n        path: 'auction/search/:keyword',\r\n        element: <OrderListView mode='auction' />,\r\n      },\r\n      {\r\n        path: 'auction/search/:keyword/page/:pageNumber',\r\n        element: <OrderListView mode='auction' />,\r\n      },\r\n      { path: 'messages', element: <MessangerView /> },\r\n    ],\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: '/', element: <DashboardLayout /> },\r\n      { path: 'signup', element: <SignUpView /> },\r\n      { path: 'signin', element: <SignInView /> },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default routes\r\n","import { createTheme } from '@material-ui/core/styles'\r\nimport { colors } from '@material-ui/core'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white,\r\n    },\r\n    primary: {\r\n      main: '#2574A9',\r\n    },\r\n    secondary: {\r\n      main: '#2E151B',\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600],\r\n    },\r\n  },\r\n\r\n  components: {\r\n    MuiOutlinedInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: '16px',\r\n        },\r\n      },\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: '16px',\r\n        },\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { createStyles } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%',\n      },\n      a: {\n        textDecoration: 'none',\n      },\n      '#root': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  })\n)\n\nconst GlobalStyles = () => {\n  useStyles()\n\n  return null\n}\n\nexport default GlobalStyles\n","import { useRoutes } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core'\nimport routes from '../src/routes'\nimport theme from './theme'\nimport GlobalStyles from './components/GlobalStyles'\n\nconst App = () => {\n  const routing = useRoutes(routes)\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderListReducer,\n  orderDetailsReducer,\n  orderUpdateReducer,\n  orderBidCreateReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderList: orderListReducer,\n  orderDetails: orderDetailsReducer,\n  orderUpdate: orderUpdateReducer,\n  orderBidCreate: orderBidCreateReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_UPDATE_REQUEST,\r\n  ORDER_UPDATE_SUCCESS,\r\n  ORDER_UPDATE_FAIL,\r\n  ORDER_UPDATE_RESET,\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_LIST_RESET,\r\n  ORDER_CREATE_BID_REQUEST,\r\n  ORDER_CREATE_BID_SUCCESS,\r\n  ORDER_CREATE_BID_FAIL,\r\n  ORDER_CREATE_BID_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload }\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload.orders,\r\n        pages: action.payload.pages,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload }\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_DETAILS_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderUpdateReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload }\r\n    case ORDER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_UPDATE_RESET:\r\n      return { order: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderBidCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_BID_REQUEST:\r\n      return { loading: true }\r\n    case ORDER_CREATE_BID_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case ORDER_CREATE_BID_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case ORDER_CREATE_BID_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\nimport { CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <CssBaseline />\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}